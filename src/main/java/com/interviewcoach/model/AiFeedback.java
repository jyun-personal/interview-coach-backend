package com.interviewcoach.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.CreationTimestamp;

import java.time.OffsetDateTime;
import java.util.UUID;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "ai_feedbacks")
public class AiFeedback {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    @Column(name = "feedback_text", columnDefinition = "TEXT", nullable = false)
    private String feedbackText; // generated by Gemini or Pollination AI API, bascially a feedback from a virtual career coach regarding how the user responded to an interview question

    @Min(1)
    @Max(10)
    @Column(name = "score")
    private Integer score;  // generated by Gemini or Pollination AI API, an optional score from 1-10 to rate the user's response to each question

    @CreationTimestamp
    @Column(nullable = false, updatable = false)
    private OffsetDateTime createdAt;

    @OneToOne
    @JoinColumn(name = "interview_question_id", nullable = false)
    private InterviewQuestion interviewQuestion;  // One AI feedback for each question response pair

    @OneToOne
    @JoinColumn(name = "user_response_id", nullable = false)
    private UserResponse userResponse;  // One AI feedback for each question response pair
}
